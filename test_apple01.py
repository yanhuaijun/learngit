# Generated by Selenium IDE
'''
打开苹果网站登录，此代码为录制导出
'''
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestApple01():
  def setup_method(self,):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self,):
    self.driver.quit()
  
  def test_apple01(self):
    # Test name: apple01
    # Step # | name | target | value | comment
    # 1 | open | /IDMSWebAuth/signin?appIdKey=20379f32034f8867d352666ff2904d2152d5ff6843ee2db5ab5df863c14b1aef&path=%2F__logged_in%2Freportaproblem.apple.com%2F__dq_dsauth%2FPRODUCTION_EXTERNAL&authResult=FAILED |  | 
    self.driver.get("https://reportaproblem.apple.com/")
    # 2 | setWindowSize | 1656x856 |  | 
    self.driver.set_window_size(1656, 856)
    # 3 | selectFrame | index=0 |  | 
    self.driver.switch_to.frame(0)
    time.sleep(8)
    print(self.driver.get_cookies())
    # 4 | click | id=account_name_text_field |  | 
    self.driver.find_element(By.ID, "account_name_text_field").click()
    # 5 | type | id=account_name_text_field | 563292370@qq.com | 
    self.driver.find_element(By.ID, "account_name_text_field").send_keys("liaoge429@163.com")
    time.sleep(1)
    # 6 | click | id=sign-in |  | 
    self.driver.find_element(By.ID, "sign-in").click()
    time.sleep(1)
    # 7 | click | id=password_text_field |  | 
    self.driver.find_element(By.ID, "password_text_field").click()
    time.sleep(1)
    # 8 | type | id=password_text_field | Yanhuaijun2525 | 
    self.driver.find_element(By.ID, "password_text_field").send_keys("Lg425601")   #Yanhuaijun2525
    time.sleep(1)
    # 9 | click | id=sign-in |  | 
    self.driver.find_element(By.ID, "sign-in").click()
    # 10 | selectFrame | relative=parent |  |
    self.driver.switch_to.default_content()
    time.sleep(66)
    print(self.driver.get_cookies())
    # 11 | click | css=.Apps |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".Apps").click()
    time.sleep(1.5)
    # 12 | click | css=.Subscriptions |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".Subscriptions").click()
    time.sleep(1.5)
    # 13 | click | css=.Movies |  |
    self.driver.find_element(By.CSS_SELECTOR, ".Movies").click()
    time.sleep(1.5)
    # 14 | click | css=.TVShows |  |
    self.driver.find_element(By.CSS_SELECTOR, ".TVShows").click()
    time.sleep(1.5)
    # 15 | click | css=.Music |  |
    self.driver.find_element(By.CSS_SELECTOR, ".Music").click()
    time.sleep(1.5)
    # 16 | click | css=.Books |  |
    self.driver.find_element(By.CSS_SELECTOR, ".Books").click()
  
if __name__ == '__main__':
   test = TestApple01()
   test.setup_method()
   print('dd')
   test.test_apple01()
   test.teardown_method()
   print('关闭浏览器')